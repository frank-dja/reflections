-What happens when you initialize a repository? 
Why do you need to do it?
	When a repository is initialized, git creates a 
	hidden directory that will store the necessary files to 
	manage the version control. 

	We initialize a repository to start the version control 
	of a directory from the scratch, that is, without 
	copying/clonning data from other repository.

- How can you use the staging area to make sure 
you have one commit per logical change?
To do that, I can use "git diff" to compare the 
files of the last commit, stored in the staging area,
against the working directory files. Also, 
before commiting, I can compare the staging area files
against the files of the last commit through: 
"git diff --staged". 

- What are some situations when branches would be helpful 
in keeping your history organized? How would branches help?
	I think that branches would be helpful when 
	we want to make (possible large) changes on 
	a project while we still want to continue 
	developing the original system. This includes changing a main functionality, 
	presentation (including GUIs and language), and the application 
	of the system to different data. Branches would help
	by allowing to continue developing the different version 
	of the systems in different branches, and allowing 
	to "merge" them if needed.    

- How do the diagrams help you visualize the 
branch structure?
	The diagrams show the states that a projects has 
	undergone, as sequential changes or parallel changes 
	(when new branches are created). This view mey help 
	to have a global vieew of the project history and use it 
	to tasks like merging branches.
